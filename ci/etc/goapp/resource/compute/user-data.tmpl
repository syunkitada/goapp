#!/bin/sh -x

isCentos=false
isCentos7=false
grep 'CentOS' /etc/os-release
if [ $? == 0 ]; then
  isCentos=true
  grep 'VERSION_ID="7"' /etc/os-release
  if [ $? == 0 ]; then
    isCentos7=true
  fi
fi

isUbuntu=false
isUbuntu18=false
grep 'Ubuntu' /etc/os-release
if [ $? == 0 ]; then
  isUbuntu=true
  grep 'VERSION_ID="18' /etc/os-release
  if [ $? == 0 ]; then
    isUbuntu18=true
  fi
fi



#
# Setup user for debug
#
echo 'goapp:x:2000:2000:goapp,,,:/home/goapp:/bin/bash' >> /etc/passwd
echo 'goapp:goapp' |chpasswd
echo "goapp:x:2000:goapp" >> /etc/group
echo "%goapp  ALL=(ALL:ALL) ALL" >> /etc/sudoers


#
# Setup sshd for debug
#
sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
systemctl enable ssh || systemctl enable sshd
systemctl restart ssh || systemctl restart sshd


# Disable cloud-* services
# systemctl disable cloud-config
# systemctl disable cloud-final
# systemctl disable cloud-init-local
# systemctl disable cloud-init
for service in `systemctl list-unit-files -t service | grep cloud- | awk '{print $1}'`
do
    systemctl disable $service
done


#
# Setup init service
#
mkdir -p /opt/goapp
mkdir -p /opt/goapp/bin/

cat << 'EOS' > /opt/goapp/bin/goapp-init
#!/bin/sh -x
# Setup Network
{{- range $i, $port := .Ports }}

dev{{ $i }}=`grep {{ $port.VmMac }} /sys/class/net/*/address -l | awk -F '/' '{print $5}'`
ip addr add {{ $port.VmIp }}/{{ subnetmask $port.VmSubnet }} dev $dev{{ $i }}
ip link set $dev{{ $i }} up
ip route add {{ $port.NetnsIp }} via {{ $port.VmIp }}

{{- end }}

ip route add default via {{ .DefaultGateway }}
EOS

chmod 755 /opt/goapp/bin/goapp-init

# Create init service
cat << 'EOS' > /etc/systemd/system/goapp-init.service
[Unit]
Description=Initial cloud-init job (metadata service crawler)
DefaultDependencies=no
After=cloud-init-local.service
After=systemd-networkd-wait-online.service
After=networking.service
Before=network-online.target
Before=sshd-keygen.service
Before=sshd.service
Before=sysinit.target
Before=systemd-user-sessions.service

[Service]
Type=oneshot
ExecStart=/opt/goapp/bin/goapp-init
RemainAfterExit=yes
TimeoutSec=0

# Output needs to appear in instance console output
StandardOutput=journal+console

[Install]
WantedBy=multi-user.target
EOS

sudo systemctl daemon-reload
sudo systemctl enable goapp-init
sudo systemctl start goapp-init


# ------------------------------
# Setup resolver for Centos7
# ------------------------------
if "${isCentos7}"; then
  rpm -qa | grep dnsmasq
  if [ $? != 0 ]; then
    cat << 'EOS' > /etc/resolv.conf
{{- range $i, $resolver := .Resolvers }}
nameserver {{ $resolver.Resolver }}
{{- end }}
EOS
    yum install dnsmasq -y
  fi

  cat << 'EOS' > /etc/dnsmasq.conf
nameserver 127.0.0.53
options edns0

listen-address=::1,127.0.0.1
cache-size=150
port=53
{{- range $i, $resolver := .Resolvers }}
server={{ $resolver.Resolver }}
{{- end }}
EOS

fi
# End isCentos7


# ------------------------------
# Setup resolver for Ubuntu18
# ------------------------------
if "${isUbuntu18}"; then
  mkdir -p /etc/systemd/resolved.conf.d/
  cat << 'EOS' > /etc/systemd/resolved.conf.d/goapp.conf
{{- range $i, $resolver := .Resolvers }}
[Resolve]
DNS={{ $resolver.Resolver }}
# FallbackDNS=
# Domains=
LLMNR=no
MulticastDNS=no
DNSSEC=no
Cache=yes
DNSStubListener=yes
{{- end }}
EOS
  systemctl enable systemd-resolved
  systemctl restart systemd-resolved
fi
# End isUbuntu18
